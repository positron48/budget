// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: budget/v1/report.proto

package budgetv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonthlyCategorySummaryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    string                 `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName  string                 `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"` // localized best-effort
	Type          TransactionType        `protobuf:"varint,3,opt,name=type,proto3,enum=budget.v1.TransactionType" json:"type,omitempty"`     // income / expense
	Total         *Money                 `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`                                   // in target currency
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthlyCategorySummaryItem) Reset() {
	*x = MonthlyCategorySummaryItem{}
	mi := &file_budget_v1_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlyCategorySummaryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyCategorySummaryItem) ProtoMessage() {}

func (x *MonthlyCategorySummaryItem) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyCategorySummaryItem.ProtoReflect.Descriptor instead.
func (*MonthlyCategorySummaryItem) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{0}
}

func (x *MonthlyCategorySummaryItem) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MonthlyCategorySummaryItem) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *MonthlyCategorySummaryItem) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *MonthlyCategorySummaryItem) GetTotal() *Money {
	if x != nil {
		return x.Total
	}
	return nil
}

type GetMonthlySummaryRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Year                  int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`                                                                  // e.g., 2025
	Month                 int32                  `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`                                                                // 1..12
	Locale                string                 `protobuf:"bytes,3,opt,name=locale,proto3" json:"locale,omitempty"`                                                               // preferred translation
	TargetCurrencyCode    string                 `protobuf:"bytes,4,opt,name=target_currency_code,json=targetCurrencyCode,proto3" json:"target_currency_code,omitempty"`           // if empty, use tenant default currency
	TimezoneOffsetMinutes int32                  `protobuf:"varint,5,opt,name=timezone_offset_minutes,json=timezoneOffsetMinutes,proto3" json:"timezone_offset_minutes,omitempty"` // minutes to add to local time to get UTC (JS getTimezoneOffset)
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetMonthlySummaryRequest) Reset() {
	*x = GetMonthlySummaryRequest{}
	mi := &file_budget_v1_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryRequest) ProtoMessage() {}

func (x *GetMonthlySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{1}
}

func (x *GetMonthlySummaryRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetMonthlySummaryRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetMonthlySummaryRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *GetMonthlySummaryRequest) GetTargetCurrencyCode() string {
	if x != nil {
		return x.TargetCurrencyCode
	}
	return ""
}

func (x *GetMonthlySummaryRequest) GetTimezoneOffsetMinutes() int32 {
	if x != nil {
		return x.TimezoneOffsetMinutes
	}
	return 0
}

type GetMonthlySummaryResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Items         []*MonthlyCategorySummaryItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalIncome   *Money                        `protobuf:"bytes,2,opt,name=total_income,json=totalIncome,proto3" json:"total_income,omitempty"`    // in target currency
	TotalExpense  *Money                        `protobuf:"bytes,3,opt,name=total_expense,json=totalExpense,proto3" json:"total_expense,omitempty"` // in target currency
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonthlySummaryResponse) Reset() {
	*x = GetMonthlySummaryResponse{}
	mi := &file_budget_v1_report_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthlySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthlySummaryResponse) ProtoMessage() {}

func (x *GetMonthlySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthlySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetMonthlySummaryResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{2}
}

func (x *GetMonthlySummaryResponse) GetItems() []*MonthlyCategorySummaryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetMonthlySummaryResponse) GetTotalIncome() *Money {
	if x != nil {
		return x.TotalIncome
	}
	return nil
}

func (x *GetMonthlySummaryResponse) GetTotalExpense() *Money {
	if x != nil {
		return x.TotalExpense
	}
	return nil
}

type MonthlyCategoryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    string                 `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CategoryName  string                 `protobuf:"bytes,2,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Type          TransactionType        `protobuf:"varint,3,opt,name=type,proto3,enum=budget.v1.TransactionType" json:"type,omitempty"`
	MonthlyTotals []*Money               `protobuf:"bytes,4,rep,name=monthly_totals,json=monthlyTotals,proto3" json:"monthly_totals,omitempty"` // 12 months of data
	Total         *Money                 `protobuf:"bytes,5,opt,name=total,proto3" json:"total,omitempty"`                                      // sum of all months
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonthlyCategoryData) Reset() {
	*x = MonthlyCategoryData{}
	mi := &file_budget_v1_report_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonthlyCategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonthlyCategoryData) ProtoMessage() {}

func (x *MonthlyCategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonthlyCategoryData.ProtoReflect.Descriptor instead.
func (*MonthlyCategoryData) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{3}
}

func (x *MonthlyCategoryData) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *MonthlyCategoryData) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *MonthlyCategoryData) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *MonthlyCategoryData) GetMonthlyTotals() []*Money {
	if x != nil {
		return x.MonthlyTotals
	}
	return nil
}

func (x *MonthlyCategoryData) GetTotal() *Money {
	if x != nil {
		return x.Total
	}
	return nil
}

type GetSummaryReportRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	FromDate              string                 `protobuf:"bytes,1,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`                                           // YYYY-MM-DD format
	ToDate                string                 `protobuf:"bytes,2,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`                                                 // YYYY-MM-DD format
	Locale                string                 `protobuf:"bytes,3,opt,name=locale,proto3" json:"locale,omitempty"`                                                               // preferred translation
	TargetCurrencyCode    string                 `protobuf:"bytes,4,opt,name=target_currency_code,json=targetCurrencyCode,proto3" json:"target_currency_code,omitempty"`           // if empty, use tenant default currency
	TimezoneOffsetMinutes int32                  `protobuf:"varint,5,opt,name=timezone_offset_minutes,json=timezoneOffsetMinutes,proto3" json:"timezone_offset_minutes,omitempty"` // minutes to add to local time to get UTC (JS getTimezoneOffset)
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSummaryReportRequest) Reset() {
	*x = GetSummaryReportRequest{}
	mi := &file_budget_v1_report_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummaryReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryReportRequest) ProtoMessage() {}

func (x *GetSummaryReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryReportRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryReportRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{4}
}

func (x *GetSummaryReportRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetSummaryReportRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

func (x *GetSummaryReportRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *GetSummaryReportRequest) GetTargetCurrencyCode() string {
	if x != nil {
		return x.TargetCurrencyCode
	}
	return ""
}

func (x *GetSummaryReportRequest) GetTimezoneOffsetMinutes() int32 {
	if x != nil {
		return x.TimezoneOffsetMinutes
	}
	return 0
}

type GetSummaryReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*MonthlyCategoryData `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Months        []string               `protobuf:"bytes,2,rep,name=months,proto3" json:"months,omitempty"`                                 // month labels like "2024-01", "2024-02", etc.
	TotalIncome   *Money                 `protobuf:"bytes,3,opt,name=total_income,json=totalIncome,proto3" json:"total_income,omitempty"`    // in target currency
	TotalExpense  *Money                 `protobuf:"bytes,4,opt,name=total_expense,json=totalExpense,proto3" json:"total_expense,omitempty"` // in target currency
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSummaryReportResponse) Reset() {
	*x = GetSummaryReportResponse{}
	mi := &file_budget_v1_report_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummaryReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryReportResponse) ProtoMessage() {}

func (x *GetSummaryReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryReportResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryReportResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{5}
}

func (x *GetSummaryReportResponse) GetCategories() []*MonthlyCategoryData {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *GetSummaryReportResponse) GetMonths() []string {
	if x != nil {
		return x.Months
	}
	return nil
}

func (x *GetSummaryReportResponse) GetTotalIncome() *Money {
	if x != nil {
		return x.TotalIncome
	}
	return nil
}

func (x *GetSummaryReportResponse) GetTotalExpense() *Money {
	if x != nil {
		return x.TotalExpense
	}
	return nil
}

type GetDateRangeRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Locale                string                 `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"`                                                               // preferred translation
	TimezoneOffsetMinutes int32                  `protobuf:"varint,2,opt,name=timezone_offset_minutes,json=timezoneOffsetMinutes,proto3" json:"timezone_offset_minutes,omitempty"` // minutes to add to local time to get UTC (JS getTimezoneOffset)
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetDateRangeRequest) Reset() {
	*x = GetDateRangeRequest{}
	mi := &file_budget_v1_report_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDateRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDateRangeRequest) ProtoMessage() {}

func (x *GetDateRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDateRangeRequest.ProtoReflect.Descriptor instead.
func (*GetDateRangeRequest) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{6}
}

func (x *GetDateRangeRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *GetDateRangeRequest) GetTimezoneOffsetMinutes() int32 {
	if x != nil {
		return x.TimezoneOffsetMinutes
	}
	return 0
}

type GetDateRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EarliestDate  string                 `protobuf:"bytes,1,opt,name=earliest_date,json=earliestDate,proto3" json:"earliest_date,omitempty"` // YYYY-MM-DD format of first transaction
	LatestDate    string                 `protobuf:"bytes,2,opt,name=latest_date,json=latestDate,proto3" json:"latest_date,omitempty"`       // YYYY-MM-DD format of last transaction
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDateRangeResponse) Reset() {
	*x = GetDateRangeResponse{}
	mi := &file_budget_v1_report_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDateRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDateRangeResponse) ProtoMessage() {}

func (x *GetDateRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_budget_v1_report_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDateRangeResponse.ProtoReflect.Descriptor instead.
func (*GetDateRangeResponse) Descriptor() ([]byte, []int) {
	return file_budget_v1_report_proto_rawDescGZIP(), []int{7}
}

func (x *GetDateRangeResponse) GetEarliestDate() string {
	if x != nil {
		return x.EarliestDate
	}
	return ""
}

func (x *GetDateRangeResponse) GetLatestDate() string {
	if x != nil {
		return x.LatestDate
	}
	return ""
}

var File_budget_v1_report_proto protoreflect.FileDescriptor

const file_budget_v1_report_proto_rawDesc = "" +
	"\n" +
	"\x16budget/v1/report.proto\x12\tbudget.v1\x1a\x16budget/v1/common.proto\"\xba\x01\n" +
	"\x1aMonthlyCategorySummaryItem\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\tR\n" +
	"categoryId\x12#\n" +
	"\rcategory_name\x18\x02 \x01(\tR\fcategoryName\x12.\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1a.budget.v1.TransactionTypeR\x04type\x12&\n" +
	"\x05total\x18\x04 \x01(\v2\x10.budget.v1.MoneyR\x05total\"\xc6\x01\n" +
	"\x18GetMonthlySummaryRequest\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x14\n" +
	"\x05month\x18\x02 \x01(\x05R\x05month\x12\x16\n" +
	"\x06locale\x18\x03 \x01(\tR\x06locale\x120\n" +
	"\x14target_currency_code\x18\x04 \x01(\tR\x12targetCurrencyCode\x126\n" +
	"\x17timezone_offset_minutes\x18\x05 \x01(\x05R\x15timezoneOffsetMinutes\"\xc4\x01\n" +
	"\x19GetMonthlySummaryResponse\x12;\n" +
	"\x05items\x18\x01 \x03(\v2%.budget.v1.MonthlyCategorySummaryItemR\x05items\x123\n" +
	"\ftotal_income\x18\x02 \x01(\v2\x10.budget.v1.MoneyR\vtotalIncome\x125\n" +
	"\rtotal_expense\x18\x03 \x01(\v2\x10.budget.v1.MoneyR\ftotalExpense\"\xec\x01\n" +
	"\x13MonthlyCategoryData\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\tR\n" +
	"categoryId\x12#\n" +
	"\rcategory_name\x18\x02 \x01(\tR\fcategoryName\x12.\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1a.budget.v1.TransactionTypeR\x04type\x127\n" +
	"\x0emonthly_totals\x18\x04 \x03(\v2\x10.budget.v1.MoneyR\rmonthlyTotals\x12&\n" +
	"\x05total\x18\x05 \x01(\v2\x10.budget.v1.MoneyR\x05total\"\xd1\x01\n" +
	"\x17GetSummaryReportRequest\x12\x1b\n" +
	"\tfrom_date\x18\x01 \x01(\tR\bfromDate\x12\x17\n" +
	"\ato_date\x18\x02 \x01(\tR\x06toDate\x12\x16\n" +
	"\x06locale\x18\x03 \x01(\tR\x06locale\x120\n" +
	"\x14target_currency_code\x18\x04 \x01(\tR\x12targetCurrencyCode\x126\n" +
	"\x17timezone_offset_minutes\x18\x05 \x01(\x05R\x15timezoneOffsetMinutes\"\xde\x01\n" +
	"\x18GetSummaryReportResponse\x12>\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x1e.budget.v1.MonthlyCategoryDataR\n" +
	"categories\x12\x16\n" +
	"\x06months\x18\x02 \x03(\tR\x06months\x123\n" +
	"\ftotal_income\x18\x03 \x01(\v2\x10.budget.v1.MoneyR\vtotalIncome\x125\n" +
	"\rtotal_expense\x18\x04 \x01(\v2\x10.budget.v1.MoneyR\ftotalExpense\"e\n" +
	"\x13GetDateRangeRequest\x12\x16\n" +
	"\x06locale\x18\x01 \x01(\tR\x06locale\x126\n" +
	"\x17timezone_offset_minutes\x18\x02 \x01(\x05R\x15timezoneOffsetMinutes\"\\\n" +
	"\x14GetDateRangeResponse\x12#\n" +
	"\rearliest_date\x18\x01 \x01(\tR\fearliestDate\x12\x1f\n" +
	"\vlatest_date\x18\x02 \x01(\tR\n" +
	"latestDate2\x9d\x02\n" +
	"\rReportService\x12^\n" +
	"\x11GetMonthlySummary\x12#.budget.v1.GetMonthlySummaryRequest\x1a$.budget.v1.GetMonthlySummaryResponse\x12[\n" +
	"\x10GetSummaryReport\x12\".budget.v1.GetSummaryReportRequest\x1a#.budget.v1.GetSummaryReportResponse\x12O\n" +
	"\fGetDateRange\x12\x1e.budget.v1.GetDateRangeRequest\x1a\x1f.budget.v1.GetDateRangeResponseB8Z6github.com/positron48/budget/gen/go/budget/v1;budgetv1b\x06proto3"

var (
	file_budget_v1_report_proto_rawDescOnce sync.Once
	file_budget_v1_report_proto_rawDescData []byte
)

func file_budget_v1_report_proto_rawDescGZIP() []byte {
	file_budget_v1_report_proto_rawDescOnce.Do(func() {
		file_budget_v1_report_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_budget_v1_report_proto_rawDesc), len(file_budget_v1_report_proto_rawDesc)))
	})
	return file_budget_v1_report_proto_rawDescData
}

var file_budget_v1_report_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_budget_v1_report_proto_goTypes = []any{
	(*MonthlyCategorySummaryItem)(nil), // 0: budget.v1.MonthlyCategorySummaryItem
	(*GetMonthlySummaryRequest)(nil),   // 1: budget.v1.GetMonthlySummaryRequest
	(*GetMonthlySummaryResponse)(nil),  // 2: budget.v1.GetMonthlySummaryResponse
	(*MonthlyCategoryData)(nil),        // 3: budget.v1.MonthlyCategoryData
	(*GetSummaryReportRequest)(nil),    // 4: budget.v1.GetSummaryReportRequest
	(*GetSummaryReportResponse)(nil),   // 5: budget.v1.GetSummaryReportResponse
	(*GetDateRangeRequest)(nil),        // 6: budget.v1.GetDateRangeRequest
	(*GetDateRangeResponse)(nil),       // 7: budget.v1.GetDateRangeResponse
	(TransactionType)(0),               // 8: budget.v1.TransactionType
	(*Money)(nil),                      // 9: budget.v1.Money
}
var file_budget_v1_report_proto_depIdxs = []int32{
	8,  // 0: budget.v1.MonthlyCategorySummaryItem.type:type_name -> budget.v1.TransactionType
	9,  // 1: budget.v1.MonthlyCategorySummaryItem.total:type_name -> budget.v1.Money
	0,  // 2: budget.v1.GetMonthlySummaryResponse.items:type_name -> budget.v1.MonthlyCategorySummaryItem
	9,  // 3: budget.v1.GetMonthlySummaryResponse.total_income:type_name -> budget.v1.Money
	9,  // 4: budget.v1.GetMonthlySummaryResponse.total_expense:type_name -> budget.v1.Money
	8,  // 5: budget.v1.MonthlyCategoryData.type:type_name -> budget.v1.TransactionType
	9,  // 6: budget.v1.MonthlyCategoryData.monthly_totals:type_name -> budget.v1.Money
	9,  // 7: budget.v1.MonthlyCategoryData.total:type_name -> budget.v1.Money
	3,  // 8: budget.v1.GetSummaryReportResponse.categories:type_name -> budget.v1.MonthlyCategoryData
	9,  // 9: budget.v1.GetSummaryReportResponse.total_income:type_name -> budget.v1.Money
	9,  // 10: budget.v1.GetSummaryReportResponse.total_expense:type_name -> budget.v1.Money
	1,  // 11: budget.v1.ReportService.GetMonthlySummary:input_type -> budget.v1.GetMonthlySummaryRequest
	4,  // 12: budget.v1.ReportService.GetSummaryReport:input_type -> budget.v1.GetSummaryReportRequest
	6,  // 13: budget.v1.ReportService.GetDateRange:input_type -> budget.v1.GetDateRangeRequest
	2,  // 14: budget.v1.ReportService.GetMonthlySummary:output_type -> budget.v1.GetMonthlySummaryResponse
	5,  // 15: budget.v1.ReportService.GetSummaryReport:output_type -> budget.v1.GetSummaryReportResponse
	7,  // 16: budget.v1.ReportService.GetDateRange:output_type -> budget.v1.GetDateRangeResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_budget_v1_report_proto_init() }
func file_budget_v1_report_proto_init() {
	if File_budget_v1_report_proto != nil {
		return
	}
	file_budget_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_budget_v1_report_proto_rawDesc), len(file_budget_v1_report_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_budget_v1_report_proto_goTypes,
		DependencyIndexes: file_budget_v1_report_proto_depIdxs,
		MessageInfos:      file_budget_v1_report_proto_msgTypes,
	}.Build()
	File_budget_v1_report_proto = out.File
	file_budget_v1_report_proto_goTypes = nil
	file_budget_v1_report_proto_depIdxs = nil
}
