name: Build Artifacts

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  NODE_VERSION: '20'

jobs:
  build-backend:
    name: Build Go Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      
    - name: Build binary for Linux AMD64
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o budgetd-linux-amd64 ./cmd/budgetd
        
    - name: Build binary for Linux ARM64
      run: |
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o budgetd-linux-arm64 ./cmd/budgetd
        
    - name: Build binary for Windows AMD64
      run: |
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o budgetd-windows-amd64.exe ./cmd/budgetd
        
    - name: Build binary for macOS AMD64
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o budgetd-darwin-amd64 ./cmd/budgetd
        
    - name: Build binary for macOS ARM64
      run: |
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o budgetd-darwin-arm64 ./cmd/budgetd
        
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-binaries
        path: |
          budgetd-linux-amd64
          budgetd-linux-arm64
          budgetd-windows-amd64.exe
          budgetd-darwin-amd64
          budgetd-darwin-arm64
        retention-days: 30

  build-frontend:
    name: Build React Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
        
    - name: Install dependencies
      working-directory: ./web
      run: npm ci
      
    - name: Run tests
      working-directory: ./web
      run: npm run test
      
    - name: Build frontend
      working-directory: ./web
      run: npm run build
      env:
        NEXT_PUBLIC_GRPC_BASE_URL: ${{ vars.NEXT_PUBLIC_GRPC_BASE_URL || 'http://localhost:8081/grpc' }}
        NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL || 'http://localhost:3030' }}
        ENVOY_URL: ${{ vars.ENVOY_URL || 'http://localhost:8081' }}
        
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: web/.next
        retention-days: 30

