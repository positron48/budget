name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  actions: read
  contents: read

jobs:
  go:
    runs-on: ubuntu-latest
    env:
      GOTOOLCHAIN: local
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@latest
      - name: Tidy
        run: go mod tidy
      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          args: --timeout=5m
      - name: Test
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage.out
          path: coverage.out
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install deps
        working-directory: web
        run: npm ci || npm install
      - name: Lint
        working-directory: web
        run: npm run lint || echo "eslint not configured, skipping"
      - name: Build
        working-directory: web
        run: npm run build
      - name: Test
        working-directory: web
        run: npm run test
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: web/.next
      # - name: Check coverage threshold
      #   run: |
      #     total=$(go tool cover -func=coverage.out | awk '/total:/ {print int($3)}')
      #     echo "Total coverage: ${total}%"
      #     if [ "$total" -lt 80 ]; then echo "coverage below 80%" && exit 1; fi
