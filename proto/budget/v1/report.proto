syntax = "proto3";

package budget.v1;

option go_package = "github.com/positron48/budget/gen/go/budget/v1;budgetv1";

import "budget/v1/common.proto";

message MonthlyCategorySummaryItem {
  string category_id = 1;
  string category_name = 2;   // localized best-effort
  TransactionType type = 3;   // income / expense
  Money total = 4;            // in target currency
}

message GetMonthlySummaryRequest {
  int32 year = 1;             // e.g., 2025
  int32 month = 2;            // 1..12
  string locale = 3;          // preferred translation
  string target_currency_code = 4; // if empty, use tenant default currency
  int32 timezone_offset_minutes = 5; // minutes to add to local time to get UTC (JS getTimezoneOffset)
}

message GetMonthlySummaryResponse {
  repeated MonthlyCategorySummaryItem items = 1;
  Money total_income = 2;     // in target currency
  Money total_expense = 3;    // in target currency
}

message MonthlyCategoryData {
  string category_id = 1;
  string category_name = 2;
  TransactionType type = 3;
  repeated Money monthly_totals = 4; // 12 months of data
  Money total = 5; // sum of all months
}

message GetSummaryReportRequest {
  string from_date = 1;       // YYYY-MM-DD format
  string to_date = 2;         // YYYY-MM-DD format
  string locale = 3;          // preferred translation
  string target_currency_code = 4; // if empty, use tenant default currency
  int32 timezone_offset_minutes = 5; // minutes to add to local time to get UTC (JS getTimezoneOffset)
}

message GetSummaryReportResponse {
  repeated MonthlyCategoryData categories = 1;
  repeated string months = 2; // month labels like "2024-01", "2024-02", etc.
  Money total_income = 3;     // in target currency
  Money total_expense = 4;    // in target currency
}

message GetDateRangeRequest {
  string locale = 1;          // preferred translation
  int32 timezone_offset_minutes = 2; // minutes to add to local time to get UTC (JS getTimezoneOffset)
}

message GetDateRangeResponse {
  string earliest_date = 1;   // YYYY-MM-DD format of first transaction
  string latest_date = 2;     // YYYY-MM-DD format of last transaction
}

service ReportService {
  rpc GetMonthlySummary(GetMonthlySummaryRequest) returns (GetMonthlySummaryResponse);
  rpc GetSummaryReport(GetSummaryReportRequest) returns (GetSummaryReportResponse);
  rpc GetDateRange(GetDateRangeRequest) returns (GetDateRangeResponse);
}


