// @generated by protoc-gen-es v1.10.1 with parameter "target=ts,import_extension=none"
// @generated from file budget/v1/oauth.proto (package budget.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { TokenPair } from "./auth_pb";
import { User } from "./user_pb";
import { Tenant, TenantMembership } from "./tenant_pb";

/**
 * @generated from message budget.v1.GenerateAuthLinkRequest
 */
export class GenerateAuthLinkRequest extends Message<GenerateAuthLinkRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * ID пользователя в Telegram
   *
   * @generated from field: string telegram_user_id = 2;
   */
  telegramUserId = "";

  /**
   * User-Agent для логирования
   *
   * @generated from field: string user_agent = 3;
   */
  userAgent = "";

  /**
   * IP адрес для логирования
   *
   * @generated from field: string ip_address = 4;
   */
  ipAddress = "";

  constructor(data?: PartialMessage<GenerateAuthLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GenerateAuthLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_agent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "ip_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthLinkRequest {
    return new GenerateAuthLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthLinkRequest {
    return new GenerateAuthLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthLinkRequest {
    return new GenerateAuthLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthLinkRequest | PlainMessage<GenerateAuthLinkRequest> | undefined, b: GenerateAuthLinkRequest | PlainMessage<GenerateAuthLinkRequest> | undefined): boolean {
    return proto3.util.equals(GenerateAuthLinkRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GenerateAuthLinkResponse
 */
export class GenerateAuthLinkResponse extends Message<GenerateAuthLinkResponse> {
  /**
   * URL для авторизации в браузере
   *
   * @generated from field: string auth_url = 1;
   */
  authUrl = "";

  /**
   * Временный токен для верификации
   *
   * @generated from field: string auth_token = 2;
   */
  authToken = "";

  /**
   * Время истечения ссылки
   *
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;

  constructor(data?: PartialMessage<GenerateAuthLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GenerateAuthLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expires_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateAuthLinkResponse {
    return new GenerateAuthLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateAuthLinkResponse {
    return new GenerateAuthLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateAuthLinkResponse {
    return new GenerateAuthLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GenerateAuthLinkResponse | PlainMessage<GenerateAuthLinkResponse> | undefined, b: GenerateAuthLinkResponse | PlainMessage<GenerateAuthLinkResponse> | undefined): boolean {
    return proto3.util.equals(GenerateAuthLinkResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.VerifyAuthCodeRequest
 */
export class VerifyAuthCodeRequest extends Message<VerifyAuthCodeRequest> {
  /**
   * Временный токен из GenerateAuthLink
   *
   * @generated from field: string auth_token = 1;
   */
  authToken = "";

  /**
   * 6-значный код подтверждения
   *
   * @generated from field: string verification_code = 2;
   */
  verificationCode = "";

  /**
   * ID пользователя в Telegram
   *
   * @generated from field: string telegram_user_id = 3;
   */
  telegramUserId = "";

  constructor(data?: PartialMessage<VerifyAuthCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.VerifyAuthCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyAuthCodeRequest {
    return new VerifyAuthCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyAuthCodeRequest {
    return new VerifyAuthCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyAuthCodeRequest {
    return new VerifyAuthCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyAuthCodeRequest | PlainMessage<VerifyAuthCodeRequest> | undefined, b: VerifyAuthCodeRequest | PlainMessage<VerifyAuthCodeRequest> | undefined): boolean {
    return proto3.util.equals(VerifyAuthCodeRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.VerifyAuthCodeResponse
 */
export class VerifyAuthCodeResponse extends Message<VerifyAuthCodeResponse> {
  /**
   * @generated from field: budget.v1.TokenPair tokens = 1;
   */
  tokens?: TokenPair;

  /**
   * @generated from field: budget.v1.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: repeated budget.v1.TenantMembership memberships = 3;
   */
  memberships: TenantMembership[] = [];

  /**
   * ID сессии для Telegram бота
   *
   * @generated from field: string session_id = 4;
   */
  sessionId = "";

  constructor(data?: PartialMessage<VerifyAuthCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.VerifyAuthCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tokens", kind: "message", T: TokenPair },
    { no: 2, name: "user", kind: "message", T: User },
    { no: 3, name: "memberships", kind: "message", T: TenantMembership, repeated: true },
    { no: 4, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyAuthCodeResponse {
    return new VerifyAuthCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyAuthCodeResponse {
    return new VerifyAuthCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyAuthCodeResponse {
    return new VerifyAuthCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyAuthCodeResponse | PlainMessage<VerifyAuthCodeResponse> | undefined, b: VerifyAuthCodeResponse | PlainMessage<VerifyAuthCodeResponse> | undefined): boolean {
    return proto3.util.equals(VerifyAuthCodeResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.CancelAuthRequest
 */
export class CancelAuthRequest extends Message<CancelAuthRequest> {
  /**
   * @generated from field: string auth_token = 1;
   */
  authToken = "";

  /**
   * @generated from field: string telegram_user_id = 2;
   */
  telegramUserId = "";

  constructor(data?: PartialMessage<CancelAuthRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.CancelAuthRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelAuthRequest {
    return new CancelAuthRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelAuthRequest {
    return new CancelAuthRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelAuthRequest {
    return new CancelAuthRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CancelAuthRequest | PlainMessage<CancelAuthRequest> | undefined, b: CancelAuthRequest | PlainMessage<CancelAuthRequest> | undefined): boolean {
    return proto3.util.equals(CancelAuthRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.CancelAuthResponse
 */
export class CancelAuthResponse extends Message<CancelAuthResponse> {
  constructor(data?: PartialMessage<CancelAuthResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.CancelAuthResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CancelAuthResponse {
    return new CancelAuthResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CancelAuthResponse {
    return new CancelAuthResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CancelAuthResponse {
    return new CancelAuthResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CancelAuthResponse | PlainMessage<CancelAuthResponse> | undefined, b: CancelAuthResponse | PlainMessage<CancelAuthResponse> | undefined): boolean {
    return proto3.util.equals(CancelAuthResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.GetAuthStatusRequest
 */
export class GetAuthStatusRequest extends Message<GetAuthStatusRequest> {
  /**
   * @generated from field: string auth_token = 1;
   */
  authToken = "";

  constructor(data?: PartialMessage<GetAuthStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetAuthStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined, b: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GetAuthStatusResponse
 */
export class GetAuthStatusResponse extends Message<GetAuthStatusResponse> {
  /**
   * @generated from field: budget.v1.GetAuthStatusResponse.Status status = 1;
   */
  status = GetAuthStatusResponse_Status.UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expires_at = 3;
   */
  expiresAt?: Timestamp;

  /**
   * @generated from field: string email = 4;
   */
  email = "";

  constructor(data?: PartialMessage<GetAuthStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetAuthStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(GetAuthStatusResponse_Status) },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "expires_at", kind: "message", T: Timestamp },
    { no: 4, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined, b: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusResponse, a, b);
  }
}

/**
 * @generated from enum budget.v1.GetAuthStatusResponse.Status
 */
export enum GetAuthStatusResponse_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Ожидает авторизации в браузере
   *
   * @generated from enum value: STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * Авторизация завершена
   *
   * @generated from enum value: STATUS_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * Ссылка истекла
   *
   * @generated from enum value: STATUS_EXPIRED = 3;
   */
  EXPIRED = 3,

  /**
   * Отменена пользователем
   *
   * @generated from enum value: STATUS_CANCELLED = 4;
   */
  CANCELLED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GetAuthStatusResponse_Status)
proto3.util.setEnumType(GetAuthStatusResponse_Status, "budget.v1.GetAuthStatusResponse.Status", [
  { no: 0, name: "STATUS_UNSPECIFIED" },
  { no: 1, name: "STATUS_PENDING" },
  { no: 2, name: "STATUS_COMPLETED" },
  { no: 3, name: "STATUS_EXPIRED" },
  { no: 4, name: "STATUS_CANCELLED" },
]);

/**
 * @generated from message budget.v1.GetVerificationCodeRequest
 */
export class GetVerificationCodeRequest extends Message<GetVerificationCodeRequest> {
  /**
   * @generated from field: string auth_token = 1;
   */
  authToken = "";

  constructor(data?: PartialMessage<GetVerificationCodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetVerificationCodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVerificationCodeRequest {
    return new GetVerificationCodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVerificationCodeRequest {
    return new GetVerificationCodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVerificationCodeRequest {
    return new GetVerificationCodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVerificationCodeRequest | PlainMessage<GetVerificationCodeRequest> | undefined, b: GetVerificationCodeRequest | PlainMessage<GetVerificationCodeRequest> | undefined): boolean {
    return proto3.util.equals(GetVerificationCodeRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GetVerificationCodeResponse
 */
export class GetVerificationCodeResponse extends Message<GetVerificationCodeResponse> {
  /**
   * @generated from field: string verification_code = 1;
   */
  verificationCode = "";

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  constructor(data?: PartialMessage<GetVerificationCodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetVerificationCodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "verification_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVerificationCodeResponse {
    return new GetVerificationCodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVerificationCodeResponse {
    return new GetVerificationCodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVerificationCodeResponse {
    return new GetVerificationCodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVerificationCodeResponse | PlainMessage<GetVerificationCodeResponse> | undefined, b: GetVerificationCodeResponse | PlainMessage<GetVerificationCodeResponse> | undefined): boolean {
    return proto3.util.equals(GetVerificationCodeResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.TelegramSession
 */
export class TelegramSession extends Message<TelegramSession> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: string telegram_user_id = 3;
   */
  telegramUserId = "";

  /**
   * @generated from field: string tenant_id = 4;
   */
  tenantId = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expires_at = 6;
   */
  expiresAt?: Timestamp;

  /**
   * @generated from field: bool is_active = 7;
   */
  isActive = false;

  constructor(data?: PartialMessage<TelegramSession>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.TelegramSession";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "expires_at", kind: "message", T: Timestamp },
    { no: 7, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TelegramSession {
    return new TelegramSession().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TelegramSession {
    return new TelegramSession().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TelegramSession {
    return new TelegramSession().fromJsonString(jsonString, options);
  }

  static equals(a: TelegramSession | PlainMessage<TelegramSession> | undefined, b: TelegramSession | PlainMessage<TelegramSession> | undefined): boolean {
    return proto3.util.equals(TelegramSession, a, b);
  }
}

/**
 * @generated from message budget.v1.GetTelegramSessionRequest
 */
export class GetTelegramSessionRequest extends Message<GetTelegramSessionRequest> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  constructor(data?: PartialMessage<GetTelegramSessionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetTelegramSessionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTelegramSessionRequest {
    return new GetTelegramSessionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTelegramSessionRequest {
    return new GetTelegramSessionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTelegramSessionRequest {
    return new GetTelegramSessionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetTelegramSessionRequest | PlainMessage<GetTelegramSessionRequest> | undefined, b: GetTelegramSessionRequest | PlainMessage<GetTelegramSessionRequest> | undefined): boolean {
    return proto3.util.equals(GetTelegramSessionRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GetTelegramSessionResponse
 */
export class GetTelegramSessionResponse extends Message<GetTelegramSessionResponse> {
  /**
   * @generated from field: budget.v1.TelegramSession session = 1;
   */
  session?: TelegramSession;

  /**
   * @generated from field: budget.v1.User user = 2;
   */
  user?: User;

  /**
   * @generated from field: budget.v1.Tenant tenant = 3;
   */
  tenant?: Tenant;

  constructor(data?: PartialMessage<GetTelegramSessionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetTelegramSessionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session", kind: "message", T: TelegramSession },
    { no: 2, name: "user", kind: "message", T: User },
    { no: 3, name: "tenant", kind: "message", T: Tenant },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTelegramSessionResponse {
    return new GetTelegramSessionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTelegramSessionResponse {
    return new GetTelegramSessionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTelegramSessionResponse {
    return new GetTelegramSessionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetTelegramSessionResponse | PlainMessage<GetTelegramSessionResponse> | undefined, b: GetTelegramSessionResponse | PlainMessage<GetTelegramSessionResponse> | undefined): boolean {
    return proto3.util.equals(GetTelegramSessionResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.RevokeTelegramSessionRequest
 */
export class RevokeTelegramSessionRequest extends Message<RevokeTelegramSessionRequest> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string telegram_user_id = 2;
   */
  telegramUserId = "";

  constructor(data?: PartialMessage<RevokeTelegramSessionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.RevokeTelegramSessionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeTelegramSessionRequest {
    return new RevokeTelegramSessionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeTelegramSessionRequest {
    return new RevokeTelegramSessionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeTelegramSessionRequest {
    return new RevokeTelegramSessionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeTelegramSessionRequest | PlainMessage<RevokeTelegramSessionRequest> | undefined, b: RevokeTelegramSessionRequest | PlainMessage<RevokeTelegramSessionRequest> | undefined): boolean {
    return proto3.util.equals(RevokeTelegramSessionRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.RevokeTelegramSessionResponse
 */
export class RevokeTelegramSessionResponse extends Message<RevokeTelegramSessionResponse> {
  constructor(data?: PartialMessage<RevokeTelegramSessionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.RevokeTelegramSessionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeTelegramSessionResponse {
    return new RevokeTelegramSessionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeTelegramSessionResponse {
    return new RevokeTelegramSessionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeTelegramSessionResponse {
    return new RevokeTelegramSessionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeTelegramSessionResponse | PlainMessage<RevokeTelegramSessionResponse> | undefined, b: RevokeTelegramSessionResponse | PlainMessage<RevokeTelegramSessionResponse> | undefined): boolean {
    return proto3.util.equals(RevokeTelegramSessionResponse, a, b);
  }
}

/**
 * @generated from message budget.v1.ListTelegramSessionsRequest
 */
export class ListTelegramSessionsRequest extends Message<ListTelegramSessionsRequest> {
  /**
   * @generated from field: string telegram_user_id = 1;
   */
  telegramUserId = "";

  constructor(data?: PartialMessage<ListTelegramSessionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.ListTelegramSessionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTelegramSessionsRequest {
    return new ListTelegramSessionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTelegramSessionsRequest {
    return new ListTelegramSessionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTelegramSessionsRequest {
    return new ListTelegramSessionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListTelegramSessionsRequest | PlainMessage<ListTelegramSessionsRequest> | undefined, b: ListTelegramSessionsRequest | PlainMessage<ListTelegramSessionsRequest> | undefined): boolean {
    return proto3.util.equals(ListTelegramSessionsRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.ListTelegramSessionsResponse
 */
export class ListTelegramSessionsResponse extends Message<ListTelegramSessionsResponse> {
  /**
   * @generated from field: repeated budget.v1.TelegramSession sessions = 1;
   */
  sessions: TelegramSession[] = [];

  constructor(data?: PartialMessage<ListTelegramSessionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.ListTelegramSessionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessions", kind: "message", T: TelegramSession, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListTelegramSessionsResponse {
    return new ListTelegramSessionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListTelegramSessionsResponse {
    return new ListTelegramSessionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListTelegramSessionsResponse {
    return new ListTelegramSessionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListTelegramSessionsResponse | PlainMessage<ListTelegramSessionsResponse> | undefined, b: ListTelegramSessionsResponse | PlainMessage<ListTelegramSessionsResponse> | undefined): boolean {
    return proto3.util.equals(ListTelegramSessionsResponse, a, b);
  }
}

/**
 * Логирование безопасности
 *
 * @generated from message budget.v1.AuthLogEntry
 */
export class AuthLogEntry extends Message<AuthLogEntry> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  /**
   * @generated from field: string telegram_user_id = 3;
   */
  telegramUserId = "";

  /**
   * @generated from field: string ip_address = 4;
   */
  ipAddress = "";

  /**
   * @generated from field: string user_agent = 5;
   */
  userAgent = "";

  /**
   * "generate_link", "verify_code", "cancel", "revoke_session"
   *
   * @generated from field: string action = 6;
   */
  action = "";

  /**
   * "success", "failed", "expired"
   *
   * @generated from field: string status = 7;
   */
  status = "";

  /**
   * @generated from field: string error_message = 8;
   */
  errorMessage = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<AuthLogEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.AuthLogEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "ip_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_agent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "created_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthLogEntry {
    return new AuthLogEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthLogEntry {
    return new AuthLogEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthLogEntry {
    return new AuthLogEntry().fromJsonString(jsonString, options);
  }

  static equals(a: AuthLogEntry | PlainMessage<AuthLogEntry> | undefined, b: AuthLogEntry | PlainMessage<AuthLogEntry> | undefined): boolean {
    return proto3.util.equals(AuthLogEntry, a, b);
  }
}

/**
 * @generated from message budget.v1.GetAuthLogsRequest
 */
export class GetAuthLogsRequest extends Message<GetAuthLogsRequest> {
  /**
   * @generated from field: string telegram_user_id = 1;
   */
  telegramUserId = "";

  /**
   * @generated from field: int32 limit = 2;
   */
  limit = 0;

  /**
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  constructor(data?: PartialMessage<GetAuthLogsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetAuthLogsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "telegram_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthLogsRequest {
    return new GetAuthLogsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthLogsRequest {
    return new GetAuthLogsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthLogsRequest {
    return new GetAuthLogsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthLogsRequest | PlainMessage<GetAuthLogsRequest> | undefined, b: GetAuthLogsRequest | PlainMessage<GetAuthLogsRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthLogsRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GetAuthLogsResponse
 */
export class GetAuthLogsResponse extends Message<GetAuthLogsResponse> {
  /**
   * @generated from field: repeated budget.v1.AuthLogEntry logs = 1;
   */
  logs: AuthLogEntry[] = [];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount = 0;

  constructor(data?: PartialMessage<GetAuthLogsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetAuthLogsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "logs", kind: "message", T: AuthLogEntry, repeated: true },
    { no: 2, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthLogsResponse {
    return new GetAuthLogsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthLogsResponse {
    return new GetAuthLogsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthLogsResponse {
    return new GetAuthLogsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthLogsResponse | PlainMessage<GetAuthLogsResponse> | undefined, b: GetAuthLogsResponse | PlainMessage<GetAuthLogsResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthLogsResponse, a, b);
  }
}

