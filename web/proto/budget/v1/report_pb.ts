// @generated by protoc-gen-es v1.10.1 with parameter "target=ts,import_extension=none"
// @generated from file budget/v1/report.proto (package budget.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Money, TransactionType } from "./common_pb";

/**
 * @generated from message budget.v1.MonthlyCategorySummaryItem
 */
export class MonthlyCategorySummaryItem extends Message<MonthlyCategorySummaryItem> {
  /**
   * @generated from field: string category_id = 1;
   */
  categoryId = "";

  /**
   * localized best-effort
   *
   * @generated from field: string category_name = 2;
   */
  categoryName = "";

  /**
   * income / expense
   *
   * @generated from field: budget.v1.TransactionType type = 3;
   */
  type = TransactionType.UNSPECIFIED;

  /**
   * in target currency
   *
   * @generated from field: budget.v1.Money total = 4;
   */
  total?: Money;

  constructor(data?: PartialMessage<MonthlyCategorySummaryItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.MonthlyCategorySummaryItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "category_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "category_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(TransactionType) },
    { no: 4, name: "total", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MonthlyCategorySummaryItem {
    return new MonthlyCategorySummaryItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MonthlyCategorySummaryItem {
    return new MonthlyCategorySummaryItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MonthlyCategorySummaryItem {
    return new MonthlyCategorySummaryItem().fromJsonString(jsonString, options);
  }

  static equals(a: MonthlyCategorySummaryItem | PlainMessage<MonthlyCategorySummaryItem> | undefined, b: MonthlyCategorySummaryItem | PlainMessage<MonthlyCategorySummaryItem> | undefined): boolean {
    return proto3.util.equals(MonthlyCategorySummaryItem, a, b);
  }
}

/**
 * @generated from message budget.v1.GetMonthlySummaryRequest
 */
export class GetMonthlySummaryRequest extends Message<GetMonthlySummaryRequest> {
  /**
   * e.g., 2025
   *
   * @generated from field: int32 year = 1;
   */
  year = 0;

  /**
   * 1..12
   *
   * @generated from field: int32 month = 2;
   */
  month = 0;

  /**
   * preferred translation
   *
   * @generated from field: string locale = 3;
   */
  locale = "";

  /**
   * if empty, use tenant default currency
   *
   * @generated from field: string target_currency_code = 4;
   */
  targetCurrencyCode = "";

  /**
   * minutes to add to local time to get UTC (JS getTimezoneOffset)
   *
   * @generated from field: int32 timezone_offset_minutes = 5;
   */
  timezoneOffsetMinutes = 0;

  constructor(data?: PartialMessage<GetMonthlySummaryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetMonthlySummaryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "year", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "month", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "target_currency_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "timezone_offset_minutes", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMonthlySummaryRequest {
    return new GetMonthlySummaryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMonthlySummaryRequest {
    return new GetMonthlySummaryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMonthlySummaryRequest {
    return new GetMonthlySummaryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMonthlySummaryRequest | PlainMessage<GetMonthlySummaryRequest> | undefined, b: GetMonthlySummaryRequest | PlainMessage<GetMonthlySummaryRequest> | undefined): boolean {
    return proto3.util.equals(GetMonthlySummaryRequest, a, b);
  }
}

/**
 * @generated from message budget.v1.GetMonthlySummaryResponse
 */
export class GetMonthlySummaryResponse extends Message<GetMonthlySummaryResponse> {
  /**
   * @generated from field: repeated budget.v1.MonthlyCategorySummaryItem items = 1;
   */
  items: MonthlyCategorySummaryItem[] = [];

  /**
   * in target currency
   *
   * @generated from field: budget.v1.Money total_income = 2;
   */
  totalIncome?: Money;

  /**
   * in target currency
   *
   * @generated from field: budget.v1.Money total_expense = 3;
   */
  totalExpense?: Money;

  constructor(data?: PartialMessage<GetMonthlySummaryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "budget.v1.GetMonthlySummaryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "items", kind: "message", T: MonthlyCategorySummaryItem, repeated: true },
    { no: 2, name: "total_income", kind: "message", T: Money },
    { no: 3, name: "total_expense", kind: "message", T: Money },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMonthlySummaryResponse {
    return new GetMonthlySummaryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMonthlySummaryResponse {
    return new GetMonthlySummaryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMonthlySummaryResponse {
    return new GetMonthlySummaryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMonthlySummaryResponse | PlainMessage<GetMonthlySummaryResponse> | undefined, b: GetMonthlySummaryResponse | PlainMessage<GetMonthlySummaryResponse> | undefined): boolean {
    return proto3.util.equals(GetMonthlySummaryResponse, a, b);
  }
}

